# Macos
- block:
    - name: ensure not running all tasks with sudo
      fail:
        msg: "Do not run all tasks with sudo"
      when:
        - ansible_env.USER == "root"
      tags: always

    - name: dot files
      copy:
        src: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        owner: "{{ ansible_env.USER }}"
        group: staff
        mode: 0600
      with_items:
        - bash_profile
        - terraformrc
        - vimrc
      tags:
        - dotfiles
        - vim

    - name: dot files templates
      template:
        src: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/.{{ item }}"
        owner: "{{ ansible_env.USER }}"
        group: staff
        mode: 0600
      with_items:
        - ansible.cfg
      tags: dotfiles

    - name: profile.d
      become: yes
      file:
        path: /etc/profile.d
        state: directory
        owner: root
        group: wheel
        mode: 0755

    - name: profile
      become: yes
      copy:
        src: profile
        dest: /etc/profile
        owner: root
        group: wheel
        mode: 0444

    - name: ssh config directory
      file:
        path: "{{ ansible_env.HOME }}/.ssh/conf.d"
        state: directory
        owner: "{{ ansible_env.USER }}"
        group: staff
        mode: 0700

    - name: ssh config
      copy:
        src: ssh_config 
        dest: "{{ ansible_env.HOME }}/.ssh/config"
        owner: "{{ ansible_env.USER }}"
        group: staff
        mode: 0600

    - name: vim - create directories
      file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
        owner: "{{ ansible_env.USER }}"
        group: staff
        mode: 0700
      with_items:
        - ".vim"
        - ".vim/bundle"
      tags: vim

    - name: vim - clone vundle
      git:
        repo: "https://github.com/VundleVim/Vundle.vim.git"
        dest: "{{ ansible_env.HOME }}/.vim/bundle/Vundle.vim"
        accept_hostkey: "no"
        version: "master"
      tags: vim

    - name: packages - pip3
      pip:
        name: ['awscli', 'black', 'boto', 'boto3', 'jenkins-job-wrecker', 'inflection', 'kubernetes', 'okta-awscli', 'powerline-status']
        executable: pip3
        state: latest
        extra_args: --user
      tags:
        - pip
        - pip3
        - python

    - name: package - heptio-authenticator-aws
      get_url:
        url: "https://github.com/heptio/authenticator/releases/download/v{{ heptio_auth_aws_version }}/heptio-authenticator-aws_{{ heptio_auth_aws_version }}_darwin_amd64"
        dest: "/usr/local/bin/heptio-authenticator-aws"
        owner: "{{ ansible_env.USER }}"
        group: admin
        mode: 0755
        checksum: "sha256:{{ heptio_auth_aws_checksum }}"
      tags:
       - heptio
       - heptio-authenticator-aws

    - name: homebrew - update homebrew and upgrade all packages
      homebrew:
        update_homebrew: yes
        upgrade_all: yes

  when:
    ansible_distribution == "MacOSX"
